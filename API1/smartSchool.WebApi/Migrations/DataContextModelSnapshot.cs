// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace smartSchool.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("smartSchool.WebApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("PreRequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Worlkoad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PreRequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            Worlkoad = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5,
                            Worlkoad = 0
                        });
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BornAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecondName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marta",
                            Phone = "33225555",
                            Registration = 1,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(6898),
                            SecondName = "Kent"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paula",
                            Phone = "3354288",
                            Registration = 2,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9231),
                            SecondName = "Isabela"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laura",
                            Phone = "55668899",
                            Registration = 3,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9253),
                            SecondName = "Antonia"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luiza",
                            Phone = "6565659",
                            Registration = 4,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9276),
                            SecondName = "Maria"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucas",
                            Phone = "565685415",
                            Registration = 5,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9283),
                            SecondName = "Machado"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro",
                            Phone = "456454545",
                            Registration = 6,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9294),
                            SecondName = "Alvares"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BornAt = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paulo",
                            Phone = "9874512",
                            Registration = 7,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 140, DateTimeKind.Local).AddTicks(9300),
                            SecondName = "José"
                        });
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("IniDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("IniDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(864)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1718)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1728)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1730)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1732)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1738)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1740)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1742)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1744)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1747)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1749)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1751)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1753)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1755)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1757)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1759)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1761)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1765)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1767)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1769)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1770)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1772)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            IniDate = new DateTime(2021, 8, 11, 16, 31, 0, 141, DateTimeKind.Local).AddTicks(1774)
                        });
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecondName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lauro",
                            Registration = 1,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 132, DateTimeKind.Local).AddTicks(3604),
                            SecondName = "Oliveira"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Roberto",
                            Registration = 2,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 136, DateTimeKind.Local).AddTicks(2024),
                            SecondName = "Soares"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ronaldo",
                            Registration = 3,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 136, DateTimeKind.Local).AddTicks(2047),
                            SecondName = "Marconi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rodrigo",
                            Registration = 4,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 136, DateTimeKind.Local).AddTicks(2050),
                            SecondName = "Carvalho"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Alexandre",
                            Registration = 5,
                            RegistrationDate = new DateTime(2021, 8, 11, 16, 31, 0, 136, DateTimeKind.Local).AddTicks(2053),
                            SecondName = "Montanha"
                        });
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Discipline", b =>
                {
                    b.HasOne("smartSchool.WebApi.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("smartSchool.WebApi.Models.Discipline", "PreRequisite")
                        .WithMany()
                        .HasForeignKey("PreRequisiteId");

                    b.HasOne("smartSchool.WebApi.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PreRequisite");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.StudentCourse", b =>
                {
                    b.HasOne("smartSchool.WebApi.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("smartSchool.WebApi.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.StudentDiscipline", b =>
                {
                    b.HasOne("smartSchool.WebApi.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("smartSchool.WebApi.Models.Student", "Student")
                        .WithMany("Disciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Discipline", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Student", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("smartSchool.WebApi.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
